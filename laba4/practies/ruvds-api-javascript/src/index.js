/**
 * RUVDS API
 * # Введение  RUVDS API позволяет управлять серверами с помощью HTTP запросов.  API позволяет автоматически создать множество серверов, получить их статус, информацию о тарифах, датацентрах, платежах при помощи скриптов.  Документация по API начинается с общего обзора технологий, которые были реализованы. Затем представлена справочная информация о вызовах API.   ## История изменений |Версия|Дата|Изменения| |---|---|---| |2.16|2024-07-19| Для всех запросов добавлены JavaScript примеры. | |2.15|2024-07-04| Для всех запросов добавлены Python примеры. | |2.14|2024-06-26| Для всех запросов добавлены Powershell примеры. | |2.13|2024-06-19| Для всех запросов добавлены cURL примеры. | |2.12|2024-06-11| Добавлена возможность получения состояния питания и даты, до которой оплачен сервер. В методы управления сервером, добавлен возвращаемый код ошибки `409`. | |2.11|2024-05-29| Добавлена возможность управления SSH ключами и указания SSH ключа при создании сервера. | |2.10|2023-11-27| Добавлена возможность получения начального пароля от сервера при помощи GET запроса. `GET /v2/servers/$VIRTUAL_SERVER_ID/start_password` Требуется токен с правами `remove`. | |2.9|2023-11-24| Добавлена возможность получения скриншота сервера. `GET /v2/servers/$VIRTUAL_SERVER_ID/screenshot` | |2.8|2023-11-20| Ответ со статусом `403` теперь возвращает объект `api_forbidden_error`. В данном объекте дополнительно содержится поле `user_id`. | |2.7|2023-11-09| Добавлена возможность получения информации о стоимости продления виртуального сервера. `GET /v2/servers/$VIRTUAL_SERVER_ID/cost` | |2.6|2023-11-09| Добавлена возможность получения начального пароля от сервера. `POST /v2/servers/$VIRTUAL_SERVER_ID/start_password` | |2.5|2023-11-08| Добавлено получение IP адресов виртуального сервера. `GET /v2/servers/$VIRTUAL_SERVER_ID/networks` | |2.4|2023-11-07| Добавлено поле `datacenter` в объект `server`, который возвращается при получении статуса сервера. | |2.3|2023-10-31| Теперь можно предварительно узнать стоимость создания и изменения сервера при помощи параметра `get_price_only`. <br /><br /> Изменен возвращаемый объект при изменении сервера `PUT /v2/servers`. | |2.2|2023-10-23| В модель `action_error` добавлены новые типы ошибок `server_wait_for_payment` и `too_much_servers_wait_for_payment`. <br /><br /> В модель `api_action` добавлен статус `wait_user_action`. <br /><br /> Добавлена возможность выпускать токен с правами на запись. | |2.1|2023-10-12| В модель `api_error` добавлены новые типы ошибок `conflict` и `unexpected_error`. |   ## Запросы Основоной URL, на который отправляются запросы: `https://api.ruvds.com`.  Все запросы выполняются посредством HTTPS на соответствующий URI. Таким образом весть трафик зашифрован. Методы запросов соответствуют HTTP протоколу.  |Метод HTTP|Использование| |---|---| |GET| Получение информации. Данный запрос не изменяет объект. | |DELETE| Удаление объекта. Если объект не найден, то будет возвращен соответствующий код. Идемпотентность означает, что перед удалением нет необходимости проверять наличие объекта. Конечное состояние после удаления будет одним и тем же независимо от наличия объекта. | |PUT| Обновление объекта. | |POST| Создание объекта. | 
 *
 * The version of the OpenAPI document: 2.16
 * Contact: support@ruvds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActionError from './model/ActionError';
import AdditionalDriveTariff from './model/AdditionalDriveTariff';
import AdditionalServiceTariff from './model/AdditionalServiceTariff';
import AllActionsResponse from './model/AllActionsResponse';
import AllDatacentersResponse from './model/AllDatacentersResponse';
import AllNotificationsResponse from './model/AllNotificationsResponse';
import AllOsResponse from './model/AllOsResponse';
import AllPaymentsResponse from './model/AllPaymentsResponse';
import AllServersResponse from './model/AllServersResponse';
import AllSshKeys from './model/AllSshKeys';
import AllTariffsResponse from './model/AllTariffsResponse';
import AllTemplatesResponse from './model/AllTemplatesResponse';
import AllTokensResponse from './model/AllTokensResponse';
import ApiAction from './model/ApiAction';
import ApiError from './model/ApiError';
import ApiForbiddenError from './model/ApiForbiddenError';
import Balance from './model/Balance';
import CpuDailyStatResponse from './model/CpuDailyStatResponse';
import CpuHourlyStatResponse from './model/CpuHourlyStatResponse';
import CpuStat from './model/CpuStat';
import Currency from './model/Currency';
import Datacenter from './model/Datacenter';
import DriveDailyStatResponse from './model/DriveDailyStatResponse';
import DriveHourlyStatResponse from './model/DriveHourlyStatResponse';
import DriveStat from './model/DriveStat';
import DriveTariff from './model/DriveTariff';
import NetworkDailyStatResponse from './model/NetworkDailyStatResponse';
import NetworkHourlyStatResponse from './model/NetworkHourlyStatResponse';
import NetworkStat from './model/NetworkStat';
import NetworkV4 from './model/NetworkV4';
import Notification from './model/Notification';
import NotificationChange from './model/NotificationChange';
import NotificationData from './model/NotificationData';
import Os from './model/Os';
import Pagination from './model/Pagination';
import Payment from './model/Payment';
import PaymentPeriod from './model/PaymentPeriod';
import Server from './model/Server';
import ServerActionCreate from './model/ServerActionCreate';
import ServerChange from './model/ServerChange';
import ServerChangeResponse from './model/ServerChangeResponse';
import ServerCost from './model/ServerCost';
import ServerCreate from './model/ServerCreate';
import ServerCreateResponse from './model/ServerCreateResponse';
import ServerNetworksResponse from './model/ServerNetworksResponse';
import ServerPaidTill from './model/ServerPaidTill';
import ServerPowerState from './model/ServerPowerState';
import SshKey from './model/SshKey';
import SshKeyCreate from './model/SshKeyCreate';
import StartPassword from './model/StartPassword';
import StartPasswordResponse from './model/StartPasswordResponse';
import Template from './model/Template';
import Token from './model/Token';
import TokenCreate from './model/TokenCreate';
import TokenData from './model/TokenData';
import Type from './model/Type';
import VpsTariff from './model/VpsTariff';
import ActionsApi from './api/ActionsApi';
import BalanceApi from './api/BalanceApi';
import DatacentersApi from './api/DatacentersApi';
import NotificationsApi from './api/NotificationsApi';
import OSApi from './api/OSApi';
import PaymentsApi from './api/PaymentsApi';
import SSHKeysApi from './api/SSHKeysApi';
import ServersApi from './api/ServersApi';
import StatisticsApi from './api/StatisticsApi';
import TariffsApi from './api/TariffsApi';
import TemplatesApi from './api/TemplatesApi';
import TokensApi from './api/TokensApi';


/**
* # Введение  RUVDS API позволяет управлять серверами с помощью HTTP запросов.  API позволяет автоматически создать множество серверов, получить их статус, информацию о тарифах, датацентрах, платежах при помощи скриптов.  Документация по API начинается с общего обзора технологий, которые были реализованы. Затем представлена справочная информация о вызовах API.   ## История изменений |Версия|Дата|Изменения| |---|---|---| |2.16|2024-07-19| Для всех запросов добавлены JavaScript примеры. | |2.15|2024-07-04| Для всех запросов добавлены Python примеры. | |2.14|2024-06-26| Для всех запросов добавлены Powershell примеры. | |2.13|2024-06-19| Для всех запросов добавлены cURL примеры. | |2.12|2024-06-11| Добавлена возможность получения состояния питания и даты, до которой оплачен сервер. В методы управления сервером, добавлен возвращаемый код ошибки &#x60;409&#x60;. | |2.11|2024-05-29| Добавлена возможность управления SSH ключами и указания SSH ключа при создании сервера. | |2.10|2023-11-27| Добавлена возможность получения начального пароля от сервера при помощи GET запроса. &#x60;GET /v2/servers/$VIRTUAL_SERVER_ID/start_password&#x60; Требуется токен с правами &#x60;remove&#x60;. | |2.9|2023-11-24| Добавлена возможность получения скриншота сервера. &#x60;GET /v2/servers/$VIRTUAL_SERVER_ID/screenshot&#x60; | |2.8|2023-11-20| Ответ со статусом &#x60;403&#x60; теперь возвращает объект &#x60;api_forbidden_error&#x60;. В данном объекте дополнительно содержится поле &#x60;user_id&#x60;. | |2.7|2023-11-09| Добавлена возможность получения информации о стоимости продления виртуального сервера. &#x60;GET /v2/servers/$VIRTUAL_SERVER_ID/cost&#x60; | |2.6|2023-11-09| Добавлена возможность получения начального пароля от сервера. &#x60;POST /v2/servers/$VIRTUAL_SERVER_ID/start_password&#x60; | |2.5|2023-11-08| Добавлено получение IP адресов виртуального сервера. &#x60;GET /v2/servers/$VIRTUAL_SERVER_ID/networks&#x60; | |2.4|2023-11-07| Добавлено поле &#x60;datacenter&#x60; в объект &#x60;server&#x60;, который возвращается при получении статуса сервера. | |2.3|2023-10-31| Теперь можно предварительно узнать стоимость создания и изменения сервера при помощи параметра &#x60;get_price_only&#x60;. &lt;br /&gt;&lt;br /&gt; Изменен возвращаемый объект при изменении сервера &#x60;PUT /v2/servers&#x60;. | |2.2|2023-10-23| В модель &#x60;action_error&#x60; добавлены новые типы ошибок &#x60;server_wait_for_payment&#x60; и &#x60;too_much_servers_wait_for_payment&#x60;. &lt;br /&gt;&lt;br /&gt; В модель &#x60;api_action&#x60; добавлен статус &#x60;wait_user_action&#x60;. &lt;br /&gt;&lt;br /&gt; Добавлена возможность выпускать токен с правами на запись. | |2.1|2023-10-12| В модель &#x60;api_error&#x60; добавлены новые типы ошибок &#x60;conflict&#x60; и &#x60;unexpected_error&#x60;. |   ## Запросы Основоной URL, на который отправляются запросы: &#x60;https://api.ruvds.com&#x60;.  Все запросы выполняются посредством HTTPS на соответствующий URI. Таким образом весть трафик зашифрован. Методы запросов соответствуют HTTP протоколу.  |Метод HTTP|Использование| |---|---| |GET| Получение информации. Данный запрос не изменяет объект. | |DELETE| Удаление объекта. Если объект не найден, то будет возвращен соответствующий код. Идемпотентность означает, что перед удалением нет необходимости проверять наличие объекта. Конечное состояние после удаления будет одним и тем же независимо от наличия объекта. | |PUT| Обновление объекта. | |POST| Создание объекта. | .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RuvdsApi = require('index'); // See note below*.
* var xxxSvc = new RuvdsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RuvdsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RuvdsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RuvdsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.16
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActionError model constructor.
     * @property {module:model/ActionError}
     */
    ActionError,

    /**
     * The AdditionalDriveTariff model constructor.
     * @property {module:model/AdditionalDriveTariff}
     */
    AdditionalDriveTariff,

    /**
     * The AdditionalServiceTariff model constructor.
     * @property {module:model/AdditionalServiceTariff}
     */
    AdditionalServiceTariff,

    /**
     * The AllActionsResponse model constructor.
     * @property {module:model/AllActionsResponse}
     */
    AllActionsResponse,

    /**
     * The AllDatacentersResponse model constructor.
     * @property {module:model/AllDatacentersResponse}
     */
    AllDatacentersResponse,

    /**
     * The AllNotificationsResponse model constructor.
     * @property {module:model/AllNotificationsResponse}
     */
    AllNotificationsResponse,

    /**
     * The AllOsResponse model constructor.
     * @property {module:model/AllOsResponse}
     */
    AllOsResponse,

    /**
     * The AllPaymentsResponse model constructor.
     * @property {module:model/AllPaymentsResponse}
     */
    AllPaymentsResponse,

    /**
     * The AllServersResponse model constructor.
     * @property {module:model/AllServersResponse}
     */
    AllServersResponse,

    /**
     * The AllSshKeys model constructor.
     * @property {module:model/AllSshKeys}
     */
    AllSshKeys,

    /**
     * The AllTariffsResponse model constructor.
     * @property {module:model/AllTariffsResponse}
     */
    AllTariffsResponse,

    /**
     * The AllTemplatesResponse model constructor.
     * @property {module:model/AllTemplatesResponse}
     */
    AllTemplatesResponse,

    /**
     * The AllTokensResponse model constructor.
     * @property {module:model/AllTokensResponse}
     */
    AllTokensResponse,

    /**
     * The ApiAction model constructor.
     * @property {module:model/ApiAction}
     */
    ApiAction,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The ApiForbiddenError model constructor.
     * @property {module:model/ApiForbiddenError}
     */
    ApiForbiddenError,

    /**
     * The Balance model constructor.
     * @property {module:model/Balance}
     */
    Balance,

    /**
     * The CpuDailyStatResponse model constructor.
     * @property {module:model/CpuDailyStatResponse}
     */
    CpuDailyStatResponse,

    /**
     * The CpuHourlyStatResponse model constructor.
     * @property {module:model/CpuHourlyStatResponse}
     */
    CpuHourlyStatResponse,

    /**
     * The CpuStat model constructor.
     * @property {module:model/CpuStat}
     */
    CpuStat,

    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency,

    /**
     * The Datacenter model constructor.
     * @property {module:model/Datacenter}
     */
    Datacenter,

    /**
     * The DriveDailyStatResponse model constructor.
     * @property {module:model/DriveDailyStatResponse}
     */
    DriveDailyStatResponse,

    /**
     * The DriveHourlyStatResponse model constructor.
     * @property {module:model/DriveHourlyStatResponse}
     */
    DriveHourlyStatResponse,

    /**
     * The DriveStat model constructor.
     * @property {module:model/DriveStat}
     */
    DriveStat,

    /**
     * The DriveTariff model constructor.
     * @property {module:model/DriveTariff}
     */
    DriveTariff,

    /**
     * The NetworkDailyStatResponse model constructor.
     * @property {module:model/NetworkDailyStatResponse}
     */
    NetworkDailyStatResponse,

    /**
     * The NetworkHourlyStatResponse model constructor.
     * @property {module:model/NetworkHourlyStatResponse}
     */
    NetworkHourlyStatResponse,

    /**
     * The NetworkStat model constructor.
     * @property {module:model/NetworkStat}
     */
    NetworkStat,

    /**
     * The NetworkV4 model constructor.
     * @property {module:model/NetworkV4}
     */
    NetworkV4,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationChange model constructor.
     * @property {module:model/NotificationChange}
     */
    NotificationChange,

    /**
     * The NotificationData model constructor.
     * @property {module:model/NotificationData}
     */
    NotificationData,

    /**
     * The Os model constructor.
     * @property {module:model/Os}
     */
    Os,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment,

    /**
     * The PaymentPeriod model constructor.
     * @property {module:model/PaymentPeriod}
     */
    PaymentPeriod,

    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server,

    /**
     * The ServerActionCreate model constructor.
     * @property {module:model/ServerActionCreate}
     */
    ServerActionCreate,

    /**
     * The ServerChange model constructor.
     * @property {module:model/ServerChange}
     */
    ServerChange,

    /**
     * The ServerChangeResponse model constructor.
     * @property {module:model/ServerChangeResponse}
     */
    ServerChangeResponse,

    /**
     * The ServerCost model constructor.
     * @property {module:model/ServerCost}
     */
    ServerCost,

    /**
     * The ServerCreate model constructor.
     * @property {module:model/ServerCreate}
     */
    ServerCreate,

    /**
     * The ServerCreateResponse model constructor.
     * @property {module:model/ServerCreateResponse}
     */
    ServerCreateResponse,

    /**
     * The ServerNetworksResponse model constructor.
     * @property {module:model/ServerNetworksResponse}
     */
    ServerNetworksResponse,

    /**
     * The ServerPaidTill model constructor.
     * @property {module:model/ServerPaidTill}
     */
    ServerPaidTill,

    /**
     * The ServerPowerState model constructor.
     * @property {module:model/ServerPowerState}
     */
    ServerPowerState,

    /**
     * The SshKey model constructor.
     * @property {module:model/SshKey}
     */
    SshKey,

    /**
     * The SshKeyCreate model constructor.
     * @property {module:model/SshKeyCreate}
     */
    SshKeyCreate,

    /**
     * The StartPassword model constructor.
     * @property {module:model/StartPassword}
     */
    StartPassword,

    /**
     * The StartPasswordResponse model constructor.
     * @property {module:model/StartPasswordResponse}
     */
    StartPasswordResponse,

    /**
     * The Template model constructor.
     * @property {module:model/Template}
     */
    Template,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The TokenCreate model constructor.
     * @property {module:model/TokenCreate}
     */
    TokenCreate,

    /**
     * The TokenData model constructor.
     * @property {module:model/TokenData}
     */
    TokenData,

    /**
     * The Type model constructor.
     * @property {module:model/Type}
     */
    Type,

    /**
     * The VpsTariff model constructor.
     * @property {module:model/VpsTariff}
     */
    VpsTariff,

    /**
    * The ActionsApi service constructor.
    * @property {module:api/ActionsApi}
    */
    ActionsApi,

    /**
    * The BalanceApi service constructor.
    * @property {module:api/BalanceApi}
    */
    BalanceApi,

    /**
    * The DatacentersApi service constructor.
    * @property {module:api/DatacentersApi}
    */
    DatacentersApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The OSApi service constructor.
    * @property {module:api/OSApi}
    */
    OSApi,

    /**
    * The PaymentsApi service constructor.
    * @property {module:api/PaymentsApi}
    */
    PaymentsApi,

    /**
    * The SSHKeysApi service constructor.
    * @property {module:api/SSHKeysApi}
    */
    SSHKeysApi,

    /**
    * The ServersApi service constructor.
    * @property {module:api/ServersApi}
    */
    ServersApi,

    /**
    * The StatisticsApi service constructor.
    * @property {module:api/StatisticsApi}
    */
    StatisticsApi,

    /**
    * The TariffsApi service constructor.
    * @property {module:api/TariffsApi}
    */
    TariffsApi,

    /**
    * The TemplatesApi service constructor.
    * @property {module:api/TemplatesApi}
    */
    TemplatesApi,

    /**
    * The TokensApi service constructor.
    * @property {module:api/TokensApi}
    */
    TokensApi
};
